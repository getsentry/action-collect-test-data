name: pre-commit

on:
  pull_request:
  push:
    branches: [main, release/**, test-me-*]

env:
  PIP_REQUIREMENTS: requirements-dev.txt

defaults:
  run:
    # the default default is:
    #      bash --noprofile --norc -eo pipefail {0}
    shell: bash --noprofile --norc -eo pipefail -ux {0}

jobs:
  pre-commit:
    runs-on: ubuntu-latest

    permissions:
      contents: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          cache: "pip"
          cache-dependency-path: ${{env.PIP_REQUIREMENTS}}
      - run: pip install -r "$PIP_REQUIREMENTS"

      - name: set .venv
        run: |
          ln -vsf "$(python -c 'import sys; print(sys.prefix)')" .venv

      - name: "pre-commit: find fixes"
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
        id: pre-commit-fixes
        continue-on-error: true

      - name: "pre-commit: check stability"
        id: pre-commit-check
        if: steps.pre-commit-fixes.outcome == 'failure'
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1

      - uses: stefanzweifel/git-auto-commit-action@e348103e9026cc0eee72ae06630dbe30c8bf7a79 # v5.1.0
        if: steps.pre-commit-check.outcome == 'success'
        with:
          commit_message: "formatting, from `pre-commit run --all-files`"

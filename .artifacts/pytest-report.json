{
    "created": 1712605060.0038679,
    "duration": 395.9110498428345,
    "exitcode": 0,
    "root": "/home/runner/work/sentry/sentry",
    "environment": {},
    "summary": {
        "passed": 45,
        "total": 45,
        "collected": 224,
        "deselected": 179
    },
    "collectors": [
        {
            "nodeid": "",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance",
                    "type": "Package"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/chartcuterie/test_chart_renderer.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/chartcuterie/test_chart_renderer.py::TestChartRenderer",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/chartcuterie/test_chart_renderer.py::TestChartRenderer::test_debug_renders",
                    "type": "TestCaseFunction",
                    "lineno": 5
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/chartcuterie/test_chart_renderer.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/chartcuterie/test_chart_renderer.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/chartcuterie/test_chart_renderer.py::TestChartRenderer",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/chartcuterie",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/chartcuterie/test_chart_renderer.py",
                    "type": "Module"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_amazon_sqs.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_amazon_sqs.py::AmazonSQSTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_amazon_sqs.py::AmazonSQSTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_amazon_sqs.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_amazon_sqs.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_amazon_sqs.py::AmazonSQSTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_asana.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_asana.py::AsanaTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_asana.py::AsanaTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_asana.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_asana.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_asana.py::AsanaTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_bitbucket.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_bitbucket.py::BitbucketTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_bitbucket.py::BitbucketTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_bitbucket.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_bitbucket.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_bitbucket.py::BitbucketTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_github.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_github.py::GitHubTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_github.py::GitHubTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_github.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_github.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_github.py::GitHubTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_gitlab.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_gitlab.py::GitLabTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_gitlab.py::GitLabTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 16
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_gitlab.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_gitlab.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_gitlab.py::GitLabTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_jira.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_jira.py::JIRATest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_jira.py::JIRATest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_jira.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_jira.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_jira.py::JIRATest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_pagerduty.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_pagerduty.py::PagerDutyTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_pagerduty.py::PagerDutyTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_pagerduty.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_pagerduty.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_pagerduty.py::PagerDutyTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_phabricator.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_phabricator.py::PhabricatorTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_phabricator.py::PhabricatorTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_phabricator.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_phabricator.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_phabricator.py::PhabricatorTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_pivotal.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_pivotal.py::PivotalTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_pivotal.py::PivotalTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_pivotal.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_pivotal.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_pivotal.py::PivotalTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_pushover.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_pushover.py::PushoverTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_pushover.py::PushoverTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 16
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_pushover.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_pushover.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_pushover.py::PushoverTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_segment.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_segment.py::SegmentTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_segment.py::SegmentTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_segment.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_segment.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_segment.py::SegmentTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_sessionstack.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_sessionstack.py::SessionStackTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_sessionstack.py::SessionStackTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_sessionstack.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_sessionstack.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_sessionstack.py::SessionStackTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_slack.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_slack.py::SlackTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_slack.py::SlackTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_slack.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_slack.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_slack.py::SlackTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_splunk.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_splunk.py::SplunkTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_splunk.py::SplunkTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_splunk.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_splunk.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_splunk.py::SplunkTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_victorops.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_victorops.py::VictorOpsTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_victorops.py::VictorOpsTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 16
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_victorops.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_victorops.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_victorops.py::VictorOpsTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_amazon_sqs.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_asana.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_bitbucket.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_github.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_gitlab.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_jira.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_pagerduty.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_phabricator.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_pivotal.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_pushover.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_segment.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_sessionstack.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_slack.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_splunk.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins/test_victorops.py",
                    "type": "Module"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_accept_organization_invite.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_accept_organization_invite.py::AcceptOrganizationInviteTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_accept_organization_invite.py::AcceptOrganizationInviteTest::test_invite_2fa_enforced_org",
                    "type": "TestCaseFunction",
                    "lineno": 36,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_accept_organization_invite.py::AcceptOrganizationInviteTest::test_invite_not_authenticated",
                    "type": "TestCaseFunction",
                    "lineno": 31,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_accept_organization_invite.py::AcceptOrganizationInviteTest::test_invite_simple",
                    "type": "TestCaseFunction",
                    "lineno": 25,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_accept_organization_invite.py::AcceptOrganizationInviteTest::test_invite_sso_org",
                    "type": "TestCaseFunction",
                    "lineno": 48,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_accept_organization_invite.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_accept_organization_invite.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_accept_organization_invite.py::AcceptOrganizationInviteTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_account_settings.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_account_settings.py::AccountSettingsTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_account_settings.py::AccountSettingsTest::test_account_authorizations_settings",
                    "type": "TestCaseFunction",
                    "lineno": 50
                },
                {
                    "nodeid": "tests/acceptance/test_account_settings.py::AccountSettingsTest::test_account_emails_settings",
                    "type": "TestCaseFunction",
                    "lineno": 40,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_account_settings.py::AccountSettingsTest::test_account_identities_settings",
                    "type": "TestCaseFunction",
                    "lineno": 55,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_account_settings.py::AccountSettingsTest::test_account_notifications",
                    "type": "TestCaseFunction",
                    "lineno": 30,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_account_settings.py::AccountSettingsTest::test_account_security_settings",
                    "type": "TestCaseFunction",
                    "lineno": 23,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_account_settings.py::AccountSettingsTest::test_account_subscriptions_settings",
                    "type": "TestCaseFunction",
                    "lineno": 45
                },
                {
                    "nodeid": "tests/acceptance/test_account_settings.py::AccountSettingsTest::test_close_account",
                    "type": "TestCaseFunction",
                    "lineno": 60,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_account_settings.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_account_settings.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_account_settings.py::AccountSettingsTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_api.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_api.py::ApiApplicationTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_api.py::ApiApplicationTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 15,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_api.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_api.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_api.py::ApiApplicationTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_auth.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_auth.py::AuthTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_auth.py::AuthTest::test_invalid_credentials",
                    "type": "TestCaseFunction",
                    "lineno": 25,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_auth.py::AuthTest::test_no_credentials",
                    "type": "TestCaseFunction",
                    "lineno": 22,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_auth.py::AuthTest::test_renders",
                    "type": "TestCaseFunction",
                    "lineno": 19
                },
                {
                    "nodeid": "tests/acceptance/test_auth.py::AuthTest::test_success",
                    "type": "TestCaseFunction",
                    "lineno": 28,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_auth.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_auth.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_auth.py::AuthTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_create_organization.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_create_organization.py::CreateOrganizationTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_create_organization.py::CreateOrganizationTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 13,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_create_organization.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_create_organization.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_create_organization.py::CreateOrganizationTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_create_project.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_create_project.py::CreateProjectTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_create_project.py::CreateProjectTest::test_no_teams",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_create_project.py::CreateProjectTest::test_select_correct_platform",
                    "type": "TestCaseFunction",
                    "lineno": 31,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_create_project.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_create_project.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_create_project.py::CreateProjectTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_create_team.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_create_team.py::CreateTeamTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_create_team.py::CreateTeamTest::test_create",
                    "type": "TestCaseFunction",
                    "lineno": 19
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_create_team.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_create_team.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_create_team.py::CreateTeamTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_emails.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_emails.py::EmailTestCase",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_emails.py::EmailTestCase::test_emails",
                    "type": "TestCaseFunction",
                    "lineno": 82,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_emails.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_emails.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_emails.py::EmailTestCase",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_error_page_embed.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_error_page_embed.py::ErrorPageEmbedTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_error_page_embed.py::ErrorPageEmbedTest::test_closed_message_received_on_close_button_click",
                    "type": "TestCaseFunction",
                    "lineno": 43,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_error_page_embed.py::ErrorPageEmbedTest::test_closed_message_received_on_outside_click",
                    "type": "TestCaseFunction",
                    "lineno": 48,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_error_page_embed.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_error_page_embed.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_error_page_embed.py::ErrorPageEmbedTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_incidents.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_incidents.py::OrganizationIncidentsListTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_incidents.py::OrganizationIncidentsListTest::test_empty_incidents",
                    "type": "TestCaseFunction",
                    "lineno": 20,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_incidents.py::OrganizationIncidentsListTest::test_incidents_list",
                    "type": "TestCaseFunction",
                    "lineno": 25
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_incidents.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_incidents.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_incidents.py::OrganizationIncidentsListTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_issue_details.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_activity_page",
                    "type": "TestCaseFunction",
                    "lineno": 129,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_android_event",
                    "type": "TestCaseFunction",
                    "lineno": 90,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_android_ndk_event",
                    "type": "TestCaseFunction",
                    "lineno": 94,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_archived",
                    "type": "TestCaseFunction",
                    "lineno": 141,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_aspnetcore_event",
                    "type": "TestCaseFunction",
                    "lineno": 98
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_cocoa_event",
                    "type": "TestCaseFunction",
                    "lineno": 76,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_cocoa_event_frame_line_hover",
                    "type": "TestCaseFunction",
                    "lineno": 80,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_cordova_event",
                    "type": "TestCaseFunction",
                    "lineno": 113,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_empty_exception",
                    "type": "TestCaseFunction",
                    "lineno": 121,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_empty_stacktrace",
                    "type": "TestCaseFunction",
                    "lineno": 125
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_exception_and_no_threads_event",
                    "type": "TestCaseFunction",
                    "lineno": 146,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_exception_with_address_instruction",
                    "type": "TestCaseFunction",
                    "lineno": 172,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_exception_with_stack_trace_and_crashed_thread_with_stack_trace_event",
                    "type": "TestCaseFunction",
                    "lineno": 162,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_exception_with_stack_trace_and_crashed_thread_without_stack_trace_event",
                    "type": "TestCaseFunction",
                    "lineno": 150,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_exception_without_stack_trace_and_crashed_thread_with_stack_trace_event",
                    "type": "TestCaseFunction",
                    "lineno": 156
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_javascript_specific_event",
                    "type": "TestCaseFunction",
                    "lineno": 102,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_pii_tooltips",
                    "type": "TestCaseFunction",
                    "lineno": 72,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_python_event",
                    "type": "TestCaseFunction",
                    "lineno": 51,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_python_formdata_event",
                    "type": "TestCaseFunction",
                    "lineno": 68,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_python_invalid_json_error",
                    "type": "TestCaseFunction",
                    "lineno": 168
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_python_rawbody_event",
                    "type": "TestCaseFunction",
                    "lineno": 63,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_resolved",
                    "type": "TestCaseFunction",
                    "lineno": 136,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_rust_event",
                    "type": "TestCaseFunction",
                    "lineno": 108,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_stripped_event",
                    "type": "TestCaseFunction",
                    "lineno": 117,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_unity_event",
                    "type": "TestCaseFunction",
                    "lineno": 86
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_issue_details.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_issue_details_workflow.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_issue_details_workflow.py::IssueDetailsWorkflowTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_issue_details_workflow.py::IssueDetailsWorkflowTest::test_archive_basic",
                    "type": "TestCaseFunction",
                    "lineno": 47,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details_workflow.py::IssueDetailsWorkflowTest::test_assign_issue",
                    "type": "TestCaseFunction",
                    "lineno": 67,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details_workflow.py::IssueDetailsWorkflowTest::test_bookmark",
                    "type": "TestCaseFunction",
                    "lineno": 57,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details_workflow.py::IssueDetailsWorkflowTest::test_create_comment",
                    "type": "TestCaseFunction",
                    "lineno": 76,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details_workflow.py::IssueDetailsWorkflowTest::test_mark_reviewed",
                    "type": "TestCaseFunction",
                    "lineno": 86
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details_workflow.py::IssueDetailsWorkflowTest::test_resolve_basic",
                    "type": "TestCaseFunction",
                    "lineno": 37,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_issue_details_workflow.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_issue_details_workflow.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details_workflow.py::IssueDetailsWorkflowTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_issue_saved_searches.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_issue_saved_searches.py::OrganizationGroupIndexTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_issue_saved_searches.py::OrganizationGroupIndexTest::test_click_saved_search",
                    "type": "TestCaseFunction",
                    "lineno": 44,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_saved_searches.py::OrganizationGroupIndexTest::test_create_saved_search",
                    "type": "TestCaseFunction",
                    "lineno": 52,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_saved_searches.py::OrganizationGroupIndexTest::test_delete_saved_search",
                    "type": "TestCaseFunction",
                    "lineno": 122,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_saved_searches.py::OrganizationGroupIndexTest::test_edit_saved_search",
                    "type": "TestCaseFunction",
                    "lineno": 83
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_issue_saved_searches.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_issue_saved_searches.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_issue_saved_searches.py::OrganizationGroupIndexTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_issue_tag_values.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_issue_tag_values.py::IssueTagValuesTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_issue_tag_values.py::IssueTagValuesTest::test_url_tag",
                    "type": "TestCaseFunction",
                    "lineno": 34,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_issue_tag_values.py::IssueTagValuesTest::test_user_tag",
                    "type": "TestCaseFunction",
                    "lineno": 30,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_issue_tag_values.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_issue_tag_values.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_issue_tag_values.py::IssueTagValuesTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_link_team.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_link_team.py::SlackLinkTeamTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_link_team.py::SlackLinkTeamTest::test_link_team",
                    "type": "TestCaseFunction",
                    "lineno": 64,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_link_team.py::SlackLinkTeamTest::test_link_team_as_team_admin",
                    "type": "TestCaseFunction",
                    "lineno": 82,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_link_team.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_link_team.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_link_team.py::SlackLinkTeamTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_member_list.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_member_list.py::ListOrganizationMembersTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_member_list.py::ListOrganizationMembersTest::test_list",
                    "type": "TestCaseFunction",
                    "lineno": 24
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_member_list.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_member_list.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_member_list.py::ListOrganizationMembersTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_oauth_authorize.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_oauth_authorize.py::OAuthAuthorizeTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_oauth_authorize.py::OAuthAuthorizeTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 11,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_oauth_authorize.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_oauth_authorize.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_oauth_authorize.py::OAuthAuthorizeTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_onboarding.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_onboarding.py::OrganizationOnboardingTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_onboarding.py::OrganizationOnboardingTest::test_onboarding",
                    "type": "TestCaseFunction",
                    "lineno": 22,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_onboarding.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_onboarding.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_onboarding.py::OrganizationOnboardingTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_activity.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_activity.py::OrganizationActivityTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_activity.py::OrganizationActivityTest::test",
                    "type": "TestCaseFunction",
                    "lineno": 22,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_activity.py::OrganizationActivityTest::test_empty",
                    "type": "TestCaseFunction",
                    "lineno": 35,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_activity.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_activity.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_activity.py::OrganizationActivityTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_alert_rule_details.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_alert_rule_details.py::OrganizationAlertRuleDetailsTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_alert_rule_details.py::OrganizationAlertRuleDetailsTest::test_alert_rule_with_issues",
                    "type": "TestCaseFunction",
                    "lineno": 22
                },
                {
                    "nodeid": "tests/acceptance/test_organization_alert_rule_details.py::OrganizationAlertRuleDetailsTest::test_empty_alert_rule_details",
                    "type": "TestCaseFunction",
                    "lineno": 18,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_alert_rule_details.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_alert_rule_details.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_alert_rule_details.py::OrganizationAlertRuleDetailsTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_alert_rules.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_alert_rules.py::OrganizationAlertRulesListTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_alert_rules.py::OrganizationAlertRulesListTest::test_alert_rules_alert_list",
                    "type": "TestCaseFunction",
                    "lineno": 35,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_alert_rules.py::OrganizationAlertRulesListTest::test_alert_rules_list",
                    "type": "TestCaseFunction",
                    "lineno": 23,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_alert_rules.py::OrganizationAlertRulesListTest::test_empty_alert_rules",
                    "type": "TestCaseFunction",
                    "lineno": 18,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_alert_rules.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_alert_rules.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_alert_rules.py::OrganizationAlertRulesListTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_dashboards.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_add_and_move_new_widget_on_existing_dashboard",
                    "type": "TestCaseFunction",
                    "lineno": 69
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_add_issue_widgets_do_not_overlap",
                    "type": "TestCaseFunction",
                    "lineno": 190,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_cancel_without_changes_does_not_trigger_confirm_with_custom_widget_through_header",
                    "type": "TestCaseFunction",
                    "lineno": 418,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_changing_area_widget_larger_than_min_height_for_number_chart_keeps_height",
                    "type": "TestCaseFunction",
                    "lineno": 632,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_changing_number_widget_larger_than_min_height_for_area_chart_keeps_height",
                    "type": "TestCaseFunction",
                    "lineno": 591,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_changing_number_widget_to_area_updates_widget_height",
                    "type": "TestCaseFunction",
                    "lineno": 535
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_create_new_dashboard_with_modified_widget_layout",
                    "type": "TestCaseFunction",
                    "lineno": 85,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_default_layout_when_widgets_do_not_have_layout_set",
                    "type": "TestCaseFunction",
                    "lineno": 328,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_default_overview_dashboard_layout",
                    "type": "TestCaseFunction",
                    "lineno": 65,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_delete_existing_widget_does_not_trigger_new_widget_layout_reset",
                    "type": "TestCaseFunction",
                    "lineno": 253,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_delete_widget_in_view_mode",
                    "type": "TestCaseFunction",
                    "lineno": 393
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_deleting_stacked_widgets_by_context_menu_does_not_trigger_confirm_on_edit_cancel",
                    "type": "TestCaseFunction",
                    "lineno": 484,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_duplicate_widget_in_view_mode",
                    "type": "TestCaseFunction",
                    "lineno": 360,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_move_existing_widget_on_existing_dashboard",
                    "type": "TestCaseFunction",
                    "lineno": 110,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_position_when_adding_multiple_widgets_through_add_widget_tile_in_create",
                    "type": "TestCaseFunction",
                    "lineno": 456,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_position_when_adding_multiple_widgets_through_add_widget_tile_in_edit",
                    "type": "TestCaseFunction",
                    "lineno": 437
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_resize_big_number_widget",
                    "type": "TestCaseFunction",
                    "lineno": 299,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_resize_new_and_existing_widgets",
                    "type": "TestCaseFunction",
                    "lineno": 211,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_widget_edit_keeps_same_layout_after_modification",
                    "type": "TestCaseFunction",
                    "lineno": 135,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsManageAcceptanceTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsManageAcceptanceTest::test_dashboard_manager",
                    "type": "TestCaseFunction",
                    "lineno": 709,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsManageAcceptanceTest::test_dashboard_manager_with_unset_layouts_and_defined_layouts",
                    "type": "TestCaseFunction",
                    "lineno": 714
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_dashboards.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsManageAcceptanceTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_developer_settings.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_developer_settings.py::OrganizationDeveloperSettingsNewAcceptanceTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_developer_settings.py::OrganizationDeveloperSettingsNewAcceptanceTest::test_create_new_internal_integration",
                    "type": "TestCaseFunction",
                    "lineno": 40,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_developer_settings.py::OrganizationDeveloperSettingsNewAcceptanceTest::test_create_new_public_integration",
                    "type": "TestCaseFunction",
                    "lineno": 26,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_developer_settings.py::OrganizationDeveloperSettingsEditAcceptanceTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_developer_settings.py::OrganizationDeveloperSettingsEditAcceptanceTest::test_add_tokens_internal_app",
                    "type": "TestCaseFunction",
                    "lineno": 116,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_developer_settings.py::OrganizationDeveloperSettingsEditAcceptanceTest::test_edit_integration_schema",
                    "type": "TestCaseFunction",
                    "lineno": 81,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_developer_settings.py::OrganizationDeveloperSettingsEditAcceptanceTest::test_remove_tokens_internal_app",
                    "type": "TestCaseFunction",
                    "lineno": 102
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_developer_settings.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_developer_settings.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_developer_settings.py::OrganizationDeveloperSettingsNewAcceptanceTest",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_developer_settings.py::OrganizationDeveloperSettingsEditAcceptanceTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_document_integration_detailed_view.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_document_integration_detailed_view.py::OrganizationDocumentIntegrationDetailView",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_document_integration_detailed_view.py::OrganizationDocumentIntegrationDetailView::test_view_doc",
                    "type": "TestCaseFunction",
                    "lineno": 23,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_document_integration_detailed_view.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_document_integration_detailed_view.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_document_integration_detailed_view.py::OrganizationDocumentIntegrationDetailView",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_events_v2.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_all_events_query",
                    "type": "TestCaseFunction",
                    "lineno": 181,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_all_events_query_empty_state",
                    "type": "TestCaseFunction",
                    "lineno": 171,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_create_saved_query",
                    "type": "TestCaseFunction",
                    "lineno": 522,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_delete_saved_query",
                    "type": "TestCaseFunction",
                    "lineno": 584
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_drilldown_result",
                    "type": "TestCaseFunction",
                    "lineno": 643,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_duplicate_query",
                    "type": "TestCaseFunction",
                    "lineno": 611,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_errors_query",
                    "type": "TestCaseFunction",
                    "lineno": 236,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_errors_query_empty_state",
                    "type": "TestCaseFunction",
                    "lineno": 229,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_event_detail_view_from_all_events",
                    "type": "TestCaseFunction",
                    "lineno": 304
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_event_detail_view_from_errors_view",
                    "type": "TestCaseFunction",
                    "lineno": 340,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_event_detail_view_from_transactions_query",
                    "type": "TestCaseFunction",
                    "lineno": 374,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_event_detail_view_from_transactions_query_siblings",
                    "type": "TestCaseFunction",
                    "lineno": 420,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_events_default_landing",
                    "type": "TestCaseFunction",
                    "lineno": 166,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_transaction_event_detail_view_ops_filtering",
                    "type": "TestCaseFunction",
                    "lineno": 496
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_transactions_query",
                    "type": "TestCaseFunction",
                    "lineno": 289,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_transactions_query_empty_state",
                    "type": "TestCaseFunction",
                    "lineno": 279,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_usage",
                    "type": "TestCaseFunction",
                    "lineno": 682,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_view_and_rename_saved_query",
                    "type": "TestCaseFunction",
                    "lineno": 547,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_events_v2.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_global_selection_header.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_global_selection_header.py::OrganizationGlobalHeaderTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_global_selection_header.py::OrganizationGlobalHeaderTest::test_global_selection_header_dropdown",
                    "type": "TestCaseFunction",
                    "lineno": 69
                },
                {
                    "nodeid": "tests/acceptance/test_organization_global_selection_header.py::OrganizationGlobalHeaderTest::test_global_selection_header_loads_with_correct_project",
                    "type": "TestCaseFunction",
                    "lineno": 83,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_global_selection_header.py::OrganizationGlobalHeaderTest::test_global_selection_header_loads_with_correct_project_with_multi_project",
                    "type": "TestCaseFunction",
                    "lineno": 215,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_global_selection_header.py::OrganizationGlobalHeaderTest::test_global_selection_header_navigates_with_browser_back_button",
                    "type": "TestCaseFunction",
                    "lineno": 122,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_global_selection_header.py::OrganizationGlobalHeaderTest::test_global_selection_header_updates_environment_with_browser_navigation_buttons",
                    "type": "TestCaseFunction",
                    "lineno": 148,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_global_selection_header.py::OrganizationGlobalHeaderTest::test_issue_details_to_stream_with_initial_env_no_project",
                    "type": "TestCaseFunction",
                    "lineno": 342
                },
                {
                    "nodeid": "tests/acceptance/test_organization_global_selection_header.py::OrganizationGlobalHeaderTest::test_issue_details_to_stream_with_initial_env_no_project_with_multi_project_feature",
                    "type": "TestCaseFunction",
                    "lineno": 370,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_global_selection_header.py::OrganizationGlobalHeaderTest::test_issues_list_to_details_and_back_with_all_projects",
                    "type": "TestCaseFunction",
                    "lineno": 271,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_global_selection_header.py::OrganizationGlobalHeaderTest::test_issues_list_to_details_and_back_with_initial_project",
                    "type": "TestCaseFunction",
                    "lineno": 309,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_global_selection_header.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_global_selection_header.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_global_selection_header.py::OrganizationGlobalHeaderTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_group_index.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_group_index.py::OrganizationGroupIndexTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_group_index.py::OrganizationGroupIndexTest::test_archive_issues",
                    "type": "TestCaseFunction",
                    "lineno": 117,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_group_index.py::OrganizationGroupIndexTest::test_archive_issues_multi_projects",
                    "type": "TestCaseFunction",
                    "lineno": 137
                },
                {
                    "nodeid": "tests/acceptance/test_organization_group_index.py::OrganizationGroupIndexTest::test_delete_issues",
                    "type": "TestCaseFunction",
                    "lineno": 158,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_group_index.py::OrganizationGroupIndexTest::test_delete_issues_multi_projects",
                    "type": "TestCaseFunction",
                    "lineno": 178,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_group_index.py::OrganizationGroupIndexTest::test_inbox_results",
                    "type": "TestCaseFunction",
                    "lineno": 222,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_group_index.py::OrganizationGroupIndexTest::test_merge_issues",
                    "type": "TestCaseFunction",
                    "lineno": 199,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_group_index.py::OrganizationGroupIndexTest::test_resolve_issues_removal",
                    "type": "TestCaseFunction",
                    "lineno": 77
                },
                {
                    "nodeid": "tests/acceptance/test_organization_group_index.py::OrganizationGroupIndexTest::test_resolve_issues_removal_multi_projects",
                    "type": "TestCaseFunction",
                    "lineno": 96,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_group_index.py::OrganizationGroupIndexTest::test_with_no_results",
                    "type": "TestCaseFunction",
                    "lineno": 60,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_group_index.py::OrganizationGroupIndexTest::test_with_onboarding",
                    "type": "TestCaseFunction",
                    "lineno": 55,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_group_index.py::OrganizationGroupIndexTest::test_with_results",
                    "type": "TestCaseFunction",
                    "lineno": 65,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_group_index.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_group_index.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_group_index.py::OrganizationGroupIndexTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_integration_configuration_tabs.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_integration_configuration_tabs.py::OrganizationIntegrationConfigurationTabs",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_integration_configuration_tabs.py::OrganizationIntegrationConfigurationTabs::test_external_team_mappings",
                    "type": "TestCaseFunction",
                    "lineno": 85
                },
                {
                    "nodeid": "tests/acceptance/test_organization_integration_configuration_tabs.py::OrganizationIntegrationConfigurationTabs::test_external_user_mappings",
                    "type": "TestCaseFunction",
                    "lineno": 40,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_integration_configuration_tabs.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_integration_configuration_tabs.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_integration_configuration_tabs.py::OrganizationIntegrationConfigurationTabs",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_integration_detail_view.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_integration_detail_view.py::OrganizationIntegrationDetailView",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_integration_detail_view.py::OrganizationIntegrationDetailView::test_example_installation",
                    "type": "TestCaseFunction",
                    "lineno": 28,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_integration_detail_view.py::OrganizationIntegrationDetailView::test_uninstallation",
                    "type": "TestCaseFunction",
                    "lineno": 53,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_integration_detail_view.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_integration_detail_view.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_integration_detail_view.py::OrganizationIntegrationDetailView",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_join_request.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_join_request.py::OrganizationJoinRequestTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_join_request.py::OrganizationJoinRequestTest::test_view",
                    "type": "TestCaseFunction",
                    "lineno": 11,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_join_request.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_join_request.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_join_request.py::OrganizationJoinRequestTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_plugin_detail_view.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_plugin_detail_view.py::OrganizationPluginDetailedView",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_plugin_detail_view.py::OrganizationPluginDetailedView::test_opsgenie_add_to_project",
                    "type": "TestCaseFunction",
                    "lineno": 30
                },
                {
                    "nodeid": "tests/acceptance/test_organization_plugin_detail_view.py::OrganizationPluginDetailedView::test_uninstallation",
                    "type": "TestCaseFunction",
                    "lineno": 41,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_plugin_detail_view.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_plugin_detail_view.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_plugin_detail_view.py::OrganizationPluginDetailedView",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_rate_limits.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_rate_limits.py::OrganizationRateLimitsTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_rate_limits.py::OrganizationRateLimitsTest::test_with_rate_limits",
                    "type": "TestCaseFunction",
                    "lineno": 20,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_rate_limits.py::OrganizationRateLimitsTest::test_without_rate_limits",
                    "type": "TestCaseFunction",
                    "lineno": 28,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_rate_limits.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_rate_limits.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_rate_limits.py::OrganizationRateLimitsTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_releases.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_releases.py::OrganizationReleasesTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_releases.py::OrganizationReleasesTest::test_detail",
                    "type": "TestCaseFunction",
                    "lineno": 40,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_releases.py::OrganizationReleasesTest::test_detail_pick_project",
                    "type": "TestCaseFunction",
                    "lineno": 51
                },
                {
                    "nodeid": "tests/acceptance/test_organization_releases.py::OrganizationReleasesTest::test_detail_with_discover_and_performance",
                    "type": "TestCaseFunction",
                    "lineno": 64,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_releases.py::OrganizationReleasesTest::test_list",
                    "type": "TestCaseFunction",
                    "lineno": 33,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_releases.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_releases.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_releases.py::OrganizationReleasesTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_security_privacy.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_security_privacy.py::OrganizationSecurityAndPrivacyTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_security_privacy.py::OrganizationSecurityAndPrivacyTest::test_renders_2fa_setting_for_manager",
                    "type": "TestCaseFunction",
                    "lineno": 28,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_security_privacy.py::OrganizationSecurityAndPrivacyTest::test_renders_2fa_setting_for_owner",
                    "type": "TestCaseFunction",
                    "lineno": 23,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_security_privacy.py::OrganizationSecurityAndPrivacyTest::test_renders_advanced_data_scrubbing_add_rule_modal",
                    "type": "TestCaseFunction",
                    "lineno": 75
                },
                {
                    "nodeid": "tests/acceptance/test_organization_security_privacy.py::OrganizationSecurityAndPrivacyTest::test_renders_advanced_data_scrubbing_with_rules",
                    "type": "TestCaseFunction",
                    "lineno": 55,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_security_privacy.py::OrganizationSecurityAndPrivacyTest::test_renders_advanced_data_scrubbing_without_rule",
                    "type": "TestCaseFunction",
                    "lineno": 49,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_security_privacy.py::OrganizationSecurityAndPrivacyTest::test_setting_2fa_without_2fa_enabled",
                    "type": "TestCaseFunction",
                    "lineno": 36,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_security_privacy.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_security_privacy.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_security_privacy.py::OrganizationSecurityAndPrivacyTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_sentry_app_detailed_view.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_sentry_app_detailed_view.py::OrganizationSentryAppDetailedView",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_sentry_app_detailed_view.py::OrganizationSentryAppDetailedView::test_add_sentry_app",
                    "type": "TestCaseFunction",
                    "lineno": 26,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_sentry_app_detailed_view.py::OrganizationSentryAppDetailedView::test_uninstallation",
                    "type": "TestCaseFunction",
                    "lineno": 37
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_sentry_app_detailed_view.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_sentry_app_detailed_view.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_sentry_app_detailed_view.py::OrganizationSentryAppDetailedView",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_switch.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_switch.py::OrganizationSwitchTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_switch.py::OrganizationSwitchTest::test_organization_switches",
                    "type": "TestCaseFunction",
                    "lineno": 36,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_switch.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_switch.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_switch.py::OrganizationSwitchTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_user_feedback.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_organization_user_feedback.py::OrganizationUserFeedbackTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_user_feedback.py::OrganizationUserFeedbackTest::test",
                    "type": "TestCaseFunction",
                    "lineno": 20,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_user_feedback.py::OrganizationUserFeedbackTest::test_empty",
                    "type": "TestCaseFunction",
                    "lineno": 26,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_organization_user_feedback.py::OrganizationUserFeedbackTest::test_no_access",
                    "type": "TestCaseFunction",
                    "lineno": 30,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_organization_user_feedback.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_organization_user_feedback.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_user_feedback.py::OrganizationUserFeedbackTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_performance_issues.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_performance_issues.py::PerformanceIssuesTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_performance_issues.py::PerformanceIssuesTest::test_multiple_events_with_multiple_causes_are_not_grouped",
                    "type": "TestCaseFunction",
                    "lineno": 124
                },
                {
                    "nodeid": "tests/acceptance/test_performance_issues.py::PerformanceIssuesTest::test_multiple_events_with_one_cause_are_grouped",
                    "type": "TestCaseFunction",
                    "lineno": 89,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_performance_issues.py::PerformanceIssuesTest::test_n_one_api_call_performance_issue",
                    "type": "TestCaseFunction",
                    "lineno": 100,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_performance_issues.py::PerformanceIssuesTest::test_with_one_performance_issue",
                    "type": "TestCaseFunction",
                    "lineno": 67,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_performance_issues.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_performance_issues.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_performance_issues.py::PerformanceIssuesTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_performance_landing.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_performance_landing.py::PerformanceLandingTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_performance_landing.py::PerformanceLandingTest::test_with_data",
                    "type": "TestCaseFunction",
                    "lineno": 32,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_performance_landing.py::PerformanceLandingTest::test_with_data_and_new_widget_designs",
                    "type": "TestCaseFunction",
                    "lineno": 50
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_performance_landing.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_performance_landing.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_performance_landing.py::PerformanceLandingTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_performance_overview.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_performance_overview.py::PerformanceOverviewTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_performance_overview.py::PerformanceOverviewTest::test_onboarding",
                    "type": "TestCaseFunction",
                    "lineno": 32,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_performance_overview.py::PerformanceOverviewTest::test_with_data",
                    "type": "TestCaseFunction",
                    "lineno": 40,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_performance_overview.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_performance_overview.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_performance_overview.py::PerformanceOverviewTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_performance_summary.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_performance_summary.py::PerformanceSummaryTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_performance_summary.py::PerformanceSummaryTest::test_tags_page",
                    "type": "TestCaseFunction",
                    "lineno": 84,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_performance_summary.py::PerformanceSummaryTest::test_transaction_threshold_modal",
                    "type": "TestCaseFunction",
                    "lineno": 184,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_performance_summary.py::PerformanceSummaryTest::test_transaction_vitals",
                    "type": "TestCaseFunction",
                    "lineno": 103
                },
                {
                    "nodeid": "tests/acceptance/test_performance_summary.py::PerformanceSummaryTest::test_transaction_vitals_filtering",
                    "type": "TestCaseFunction",
                    "lineno": 124,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_performance_summary.py::PerformanceSummaryTest::test_view_details_from_summary",
                    "type": "TestCaseFunction",
                    "lineno": 65,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_performance_summary.py::PerformanceSummaryTest::test_with_data",
                    "type": "TestCaseFunction",
                    "lineno": 41,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_performance_summary.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_performance_summary.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_performance_summary.py::PerformanceSummaryTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_performance_trace_detail.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_performance_trace_detail.py::PerformanceTraceDetailTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_performance_trace_detail.py::PerformanceTraceDetailTest::test_with_data",
                    "type": "TestCaseFunction",
                    "lineno": 189,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_performance_trace_detail.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_performance_trace_detail.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_performance_trace_detail.py::PerformanceTraceDetailTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_performance_trends.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_performance_trends.py::PerformanceTrendsTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_performance_trends.py::PerformanceTrendsTest::test_with_data",
                    "type": "TestCaseFunction",
                    "lineno": 58
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_performance_trends.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_performance_trends.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_performance_trends.py::PerformanceTrendsTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_performance_vital_detail.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_performance_vital_detail.py::PerformanceVitalDetailsTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_performance_vital_detail.py::PerformanceVitalDetailsTest::test_with_data",
                    "type": "TestCaseFunction",
                    "lineno": 33,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_performance_vital_detail.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_performance_vital_detail.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_performance_vital_detail.py::PerformanceVitalDetailsTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_alert_settings.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_project_alert_settings.py::ProjectAlertSettingsTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_alert_settings.py::ProjectAlertSettingsTest::test_settings_load",
                    "type": "TestCaseFunction",
                    "lineno": 46,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_alert_settings.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_alert_settings.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_project_alert_settings.py::ProjectAlertSettingsTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_detail.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_project_detail.py::ProjectDetailTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_detail.py::ProjectDetailTest::test_no_feature",
                    "type": "TestCaseFunction",
                    "lineno": 76,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_project_detail.py::ProjectDetailTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 70,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_detail.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_detail.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_project_detail.py::ProjectDetailTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_general_settings.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_project_general_settings.py::ProjectGeneralSettingsTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_general_settings.py::ProjectGeneralSettingsTest::test_mobile_menu",
                    "type": "TestCaseFunction",
                    "lineno": 21
                },
                {
                    "nodeid": "tests/acceptance/test_project_general_settings.py::ProjectGeneralSettingsTest::test_saved_searches",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_general_settings.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_general_settings.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_project_general_settings.py::ProjectGeneralSettingsTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_keys.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_project_keys.py::ProjectKeysTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_keys.py::ProjectKeysTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 28,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_keys.py::ProjectKeyDetailsTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_keys.py::ProjectKeyDetailsTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 55,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_keys.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_keys.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_project_keys.py::ProjectKeysTest",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_project_keys.py::ProjectKeyDetailsTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_ownership.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_project_ownership.py::ProjectOwnershipTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_ownership.py::ProjectOwnershipTest::test_open_modal",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_project_ownership.py::ProjectOwnershipTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 11
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_ownership.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_ownership.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_project_ownership.py::ProjectOwnershipTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_release_tracking_settings.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_project_release_tracking_settings.py::ProjectReleaseTrackingSettingsTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_release_tracking_settings.py::ProjectReleaseTrackingSettingsTest::test_tags_list",
                    "type": "TestCaseFunction",
                    "lineno": 17,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_release_tracking_settings.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_release_tracking_settings.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_project_release_tracking_settings.py::ProjectReleaseTrackingSettingsTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_servicehooks.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_project_servicehooks.py::ProjectServiceHooksTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_servicehooks.py::ProjectServiceHooksTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 19,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_servicehooks.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_servicehooks.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_project_servicehooks.py::ProjectServiceHooksTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_tags_settings.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_project_tags_settings.py::ProjectTagsSettingsTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_tags_settings.py::ProjectTagsSettingsTest::test_tags_list",
                    "type": "TestCaseFunction",
                    "lineno": 24,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_tags_settings.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_tags_settings.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_project_tags_settings.py::ProjectTagsSettingsTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_user_feedback.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_project_user_feedback.py::ProjectUserFeedbackTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_user_feedback.py::ProjectUserFeedbackTest::test",
                    "type": "TestCaseFunction",
                    "lineno": 20,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_project_user_feedback.py::ProjectUserFeedbackTest::test_empty",
                    "type": "TestCaseFunction",
                    "lineno": 30
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_project_user_feedback.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_project_user_feedback.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_project_user_feedback.py::ProjectUserFeedbackTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_proxy.py::TransactionTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_proxy.py::EndToEndAPIProxyTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_proxy.py::EndToEndAPIProxyTest::test_through_api_gateway",
                    "type": "TestCaseFunction",
                    "lineno": 44,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_proxy.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_proxy.py::TransactionTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_proxy.py::EndToEndAPIProxyTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_replay_detail.py::ReplaysAcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_replay_detail.py::ReplayDetailTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_replay_detail.py::ReplayDetailTest::test_console_tab",
                    "type": "TestCaseFunction",
                    "lineno": 83,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_replay_detail.py::ReplayDetailTest::test_errors_tab",
                    "type": "TestCaseFunction",
                    "lineno": 107,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_replay_detail.py::ReplayDetailTest::test_memory_tab",
                    "type": "TestCaseFunction",
                    "lineno": 99,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_replay_detail.py::ReplayDetailTest::test_network_tab",
                    "type": "TestCaseFunction",
                    "lineno": 91
                },
                {
                    "nodeid": "tests/acceptance/test_replay_detail.py::ReplayDetailTest::test_not_found",
                    "type": "TestCaseFunction",
                    "lineno": 69,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_replay_detail.py::ReplayDetailTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 77,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_replay_detail.py::ReplayDetailTest::test_trace_tab",
                    "type": "TestCaseFunction",
                    "lineno": 115,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_replay_detail.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_replay_detail.py::ReplaysAcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_replay_detail.py::ReplayDetailTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_replay_list.py::ReplaysAcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_replay_list.py::ReplayListTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_replay_list.py::ReplayListTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 54,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_replay_list.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_replay_list.py::ReplaysAcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_replay_list.py::ReplayListTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_shared_issue.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_shared_issue.py::SharedIssueTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_shared_issue.py::SharedIssueTest::test_python_event",
                    "type": "TestCaseFunction",
                    "lineno": 17
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_shared_issue.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_shared_issue.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_shared_issue.py::SharedIssueTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_sidebar.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_sidebar.py::SidebarTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_sidebar.py::SidebarTest::test_help_search",
                    "type": "TestCaseFunction",
                    "lineno": 29,
                    "deselected": true
                },
                {
                    "nodeid": "tests/acceptance/test_sidebar.py::SidebarTest::test_new_sidebar",
                    "type": "TestCaseFunction",
                    "lineno": 16,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_sidebar.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_sidebar.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_sidebar.py::SidebarTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_teams_list.py::AcceptanceTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "tests/acceptance/test_teams_list.py::TeamsListTest",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_teams_list.py::TeamsListTest::test_simple",
                    "type": "TestCaseFunction",
                    "lineno": 19,
                    "deselected": true
                }
            ]
        },
        {
            "nodeid": "tests/acceptance/test_teams_list.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/test_teams_list.py::AcceptanceTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "tests/acceptance/test_teams_list.py::TeamsListTest",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "tests/acceptance",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "tests/acceptance/chartcuterie",
                    "type": "Dir"
                },
                {
                    "nodeid": "tests/acceptance/sentry_plugins",
                    "type": "Package"
                },
                {
                    "nodeid": "tests/acceptance/test_accept_organization_invite.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_account_settings.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_api.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_auth.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_create_organization.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_create_project.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_create_team.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_emails.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_error_page_embed.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_incidents.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_issue_details_workflow.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_issue_saved_searches.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_issue_tag_values.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_link_team.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_member_list.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_oauth_authorize.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_onboarding.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_activity.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_alert_rule_details.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_alert_rules.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_dashboards.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_developer_settings.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_document_integration_detailed_view.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_events_v2.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_global_selection_header.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_group_index.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_integration_configuration_tabs.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_integration_detail_view.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_join_request.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_plugin_detail_view.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_rate_limits.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_releases.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_security_privacy.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_sentry_app_detailed_view.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_switch.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_organization_user_feedback.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_performance_issues.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_performance_landing.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_performance_overview.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_performance_summary.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_performance_trace_detail.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_performance_trends.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_performance_vital_detail.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_project_alert_settings.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_project_detail.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_project_general_settings.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_project_keys.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_project_ownership.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_project_release_tracking_settings.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_project_servicehooks.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_project_tags_settings.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_project_user_feedback.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_proxy.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_replay_detail.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_replay_list.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_shared_issue.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_sidebar.py",
                    "type": "Module"
                },
                {
                    "nodeid": "tests/acceptance/test_teams_list.py",
                    "type": "Module"
                }
            ]
        }
    ],
    "tests": [
        {
            "nodeid": "tests/acceptance/chartcuterie/test_chart_renderer.py::TestChartRenderer::test_debug_renders",
            "lineno": 5,
            "outcome": "passed",
            "keywords": [
                "test_debug_renders",
                "TestChartRenderer",
                "usefixtures",
                "test_chart_renderer.py",
                "chartcuterie",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 10.838868745000013,
                "outcome": "passed"
            },
            "call": {
                "duration": 3.1036439300000893,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.12068288099999336,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_gitlab.py::GitLabTest::test_simple",
            "lineno": 16,
            "outcome": "passed",
            "keywords": [
                "test_simple",
                "GitLabTest",
                "usefixtures",
                "test_gitlab.py",
                "sentry_plugins",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5266223129999617,
                "outcome": "passed"
            },
            "call": {
                "duration": 4.001268151999966,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.08827177799992114,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_pushover.py::PushoverTest::test_simple",
            "lineno": 16,
            "outcome": "passed",
            "keywords": [
                "test_simple",
                "PushoverTest",
                "usefixtures",
                "test_pushover.py",
                "sentry_plugins",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5065917609999815,
                "outcome": "passed"
            },
            "call": {
                "duration": 3.715117759000009,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.08988389400008145,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/sentry_plugins/test_victorops.py::VictorOpsTest::test_simple",
            "lineno": 16,
            "outcome": "passed",
            "keywords": [
                "test_simple",
                "VictorOpsTest",
                "usefixtures",
                "test_victorops.py",
                "sentry_plugins",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5213411040000437,
                "outcome": "passed"
            },
            "call": {
                "duration": 3.70701788100007,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0901225530000147,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_account_settings.py::AccountSettingsTest::test_account_authorizations_settings",
            "lineno": 50,
            "outcome": "passed",
            "keywords": [
                "test_account_authorizations_settings",
                "AccountSettingsTest",
                "usefixtures",
                "test_account_settings.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.4830048839999108,
                "outcome": "passed"
            },
            "call": {
                "duration": 4.087838422999994,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.09511429500003032,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_account_settings.py::AccountSettingsTest::test_account_subscriptions_settings",
            "lineno": 45,
            "outcome": "passed",
            "keywords": [
                "test_account_subscriptions_settings",
                "AccountSettingsTest",
                "usefixtures",
                "test_account_settings.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5039227570000548,
                "outcome": "passed"
            },
            "call": {
                "duration": 4.06192221799995,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.09443313999997827,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_auth.py::AuthTest::test_renders",
            "lineno": 19,
            "outcome": "passed",
            "keywords": [
                "test_renders",
                "AuthTest",
                "usefixtures",
                "test_auth.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.4804986320000353,
                "outcome": "passed"
            },
            "call": {
                "duration": 2.3442918649999456,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.08115926999994372,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_create_team.py::CreateTeamTest::test_create",
            "lineno": 19,
            "outcome": "passed",
            "keywords": [
                "test_create",
                "CreateTeamTest",
                "usefixtures",
                "test_create_team.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5368319589999828,
                "outcome": "passed"
            },
            "call": {
                "duration": 4.516627482999979,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.09132516400006807,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_incidents.py::OrganizationIncidentsListTest::test_incidents_list",
            "lineno": 25,
            "outcome": "passed",
            "keywords": [
                "test_incidents_list",
                "OrganizationIncidentsListTest",
                "usefixtures",
                "snuba",
                "test_incidents.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5738482399999612,
                "outcome": "passed"
            },
            "call": {
                "duration": 5.400421157999972,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.09053835199995319,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_aspnetcore_event",
            "lineno": 98,
            "outcome": "passed",
            "keywords": [
                "test_aspnetcore_event",
                "IssueDetailsTest",
                "usefixtures",
                "snuba",
                "test_issue_details.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5794126570000344,
                "outcome": "passed"
            },
            "call": {
                "duration": 6.851253627999995,
                "outcome": "passed",
                "stdout": "19:32:11 [WARNING] django.request: Not Found: /api/0/organizations/rowdy-tiger/replay-count/ (status_code=404 request=<WSGIRequest: GET '/api/0/organizations/rowdy-tiger/replay-count/?data_source=discover&project=-1&query=issue.id%3A%5B1%5D&statsPeriod=90d'>)\n19:32:12 [WARNING] django.request: Not Found: /api/0/projects/rowdy-tiger/bengal/events/d964fdbd649a4cf8bfc35d18082b6b0e/committers/ (status_code=404 request=<WSGIRequest: GET '/api/0/projects/rowdy-tiger/bengal/events/d964fdbd649a4cf8bfc35d18082b6b0e/committers/'>)\n",
                "stderr": "%3|1712604730.239|FAIL|rdkafka#producer-1| [thrd:127.0.0.1:9092/bootstrap]: 127.0.0.1:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT)\n%3|1712604731.239|FAIL|rdkafka#producer-1| [thrd:127.0.0.1:9092/bootstrap]: 127.0.0.1:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT, 1 identical error(s) suppressed)\n"
            },
            "teardown": {
                "duration": 0.08452208900007463,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_empty_stacktrace",
            "lineno": 125,
            "outcome": "passed",
            "keywords": [
                "test_empty_stacktrace",
                "IssueDetailsTest",
                "usefixtures",
                "snuba",
                "test_issue_details.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5752884400000084,
                "outcome": "passed"
            },
            "call": {
                "duration": 5.195513596999945,
                "outcome": "passed",
                "stdout": "19:32:19 [WARNING] django.request: Not Found: /api/0/organizations/rowdy-tiger/replay-count/ (status_code=404 request=<WSGIRequest: GET '/api/0/organizations/rowdy-tiger/replay-count/?data_source=discover&project=-1&query=issue.id%3A%5B2%5D&statsPeriod=90d'>)\n19:32:20 [WARNING] django.request: Not Found: /api/0/projects/rowdy-tiger/bengal/events/d964fdbd649a4cf8bfc35d18082b6b0e/committers/ (status_code=404 request=<WSGIRequest: GET '/api/0/projects/rowdy-tiger/bengal/events/d964fdbd649a4cf8bfc35d18082b6b0e/committers/'>)\n"
            },
            "teardown": {
                "duration": 0.08454019800001333,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_exception_without_stack_trace_and_crashed_thread_with_stack_trace_event",
            "lineno": 156,
            "outcome": "passed",
            "keywords": [
                "test_exception_without_stack_trace_and_crashed_thread_with_stack_trace_event",
                "IssueDetailsTest",
                "usefixtures",
                "snuba",
                "test_issue_details.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.573832333999917,
                "outcome": "passed"
            },
            "call": {
                "duration": 5.335705349000023,
                "outcome": "passed",
                "stdout": "19:32:26 [WARNING] django.request: Not Found: /api/0/organizations/rowdy-tiger/replay-count/ (status_code=404 request=<WSGIRequest: GET '/api/0/organizations/rowdy-tiger/replay-count/?data_source=discover&project=-1&query=issue.id%3A%5B3%5D&statsPeriod=90d'>)\n19:32:27 [WARNING] django.request: Not Found: /api/0/projects/rowdy-tiger/bengal/events/d964fdbd649a4cf8bfc35d18082b6b0e/committers/ (status_code=404 request=<WSGIRequest: GET '/api/0/projects/rowdy-tiger/bengal/events/d964fdbd649a4cf8bfc35d18082b6b0e/committers/'>)\n"
            },
            "teardown": {
                "duration": 0.08551391999992575,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_python_invalid_json_error",
            "lineno": 168,
            "outcome": "passed",
            "keywords": [
                "test_python_invalid_json_error",
                "IssueDetailsTest",
                "usefixtures",
                "snuba",
                "test_issue_details.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5190932479999901,
                "outcome": "passed"
            },
            "call": {
                "duration": 5.43760803400005,
                "outcome": "passed",
                "stdout": "19:32:34 [WARNING] django.request: Not Found: /api/0/organizations/rowdy-tiger/replay-count/ (status_code=404 request=<WSGIRequest: GET '/api/0/organizations/rowdy-tiger/replay-count/?data_source=discover&project=-1&query=issue.id%3A%5B4%5D&statsPeriod=90d'>)\n19:32:35 [WARNING] django.request: Not Found: /api/0/projects/rowdy-tiger/bengal/events/d964fdbd649a4cf8bfc35d18082b6b0e/committers/ (status_code=404 request=<WSGIRequest: GET '/api/0/projects/rowdy-tiger/bengal/events/d964fdbd649a4cf8bfc35d18082b6b0e/committers/'>)\n"
            },
            "teardown": {
                "duration": 0.09262138300005063,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_issue_details.py::IssueDetailsTest::test_unity_event",
            "lineno": 86,
            "outcome": "passed",
            "keywords": [
                "test_unity_event",
                "IssueDetailsTest",
                "usefixtures",
                "snuba",
                "test_issue_details.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.6380907479999678,
                "outcome": "passed"
            },
            "call": {
                "duration": 6.044454648999931,
                "outcome": "passed",
                "stdout": "19:32:42 [WARNING] django.request: Not Found: /api/0/organizations/rowdy-tiger/replay-count/ (status_code=404 request=<WSGIRequest: GET '/api/0/organizations/rowdy-tiger/replay-count/?data_source=discover&project=-1&query=issue.id%3A%5B5%5D&statsPeriod=90d'>)\n19:32:43 [WARNING] django.request: Not Found: /api/0/projects/rowdy-tiger/bengal/events/d964fdbd649a4cf8bfc35d18082b6b0e/committers/ (status_code=404 request=<WSGIRequest: GET '/api/0/projects/rowdy-tiger/bengal/events/d964fdbd649a4cf8bfc35d18082b6b0e/committers/'>)\n",
                "stderr": "%3|1712604761.242|FAIL|rdkafka#producer-1| [thrd:127.0.0.1:9092/bootstrap]: 127.0.0.1:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT, 30 identical error(s) suppressed)\n"
            },
            "teardown": {
                "duration": 0.0846619589999591,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_issue_details_workflow.py::IssueDetailsWorkflowTest::test_mark_reviewed",
            "lineno": 86,
            "outcome": "passed",
            "keywords": [
                "test_mark_reviewed",
                "IssueDetailsWorkflowTest",
                "usefixtures",
                "snuba",
                "test_issue_details_workflow.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5750024239999902,
                "outcome": "passed"
            },
            "call": {
                "duration": 5.976137636999965,
                "outcome": "passed",
                "stdout": "19:32:49 [WARNING] django.request: Not Found: /api/0/organizations/rowdy-tiger/replay-count/ (status_code=404 request=<WSGIRequest: GET '/api/0/organizations/rowdy-tiger/replay-count/?data_source=discover&project=-1&query=issue.id%3A%5B6%5D&statsPeriod=90d'>)\n19:32:50 [WARNING] django.request: Not Found: /api/0/projects/rowdy-tiger/bengal/events/d964fdbd649a4cf8bfc35d18082b6b0e/committers/ (status_code=404 request=<WSGIRequest: GET '/api/0/projects/rowdy-tiger/bengal/events/d964fdbd649a4cf8bfc35d18082b6b0e/committers/'>)\n"
            },
            "teardown": {
                "duration": 0.0864137749999827,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_issue_saved_searches.py::OrganizationGroupIndexTest::test_edit_saved_search",
            "lineno": 83,
            "outcome": "passed",
            "keywords": [
                "test_edit_saved_search",
                "OrganizationGroupIndexTest",
                "usefixtures",
                "snuba",
                "test_issue_saved_searches.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.552214456999991,
                "outcome": "passed"
            },
            "call": {
                "duration": 5.9258953060000294,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.08185609099996327,
                "outcome": "passed",
                "stderr": "----------------------------------------\nException occurred during processing of request from ('10.1.0.159', 44920)\nTraceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/socketserver.py\", line 691, in process_request_thread\n    self.finish_request(request, client_address)\n  File \"/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/socketserver.py\", line 361, in finish_request\n    self.RequestHandlerClass(request, client_address, self)\n  File \"/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/socketserver.py\", line 755, in __init__\n    self.handle()\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/django/core/servers/basehttp.py\", line 229, in handle\n    self.handle_one_request()\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/django/core/servers/basehttp.py\", line 237, in handle_one_request\n    self.raw_requestline = self.rfile.readline(65537)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/socket.py\", line 706, in readinto\n    return self._sock.recv_into(b)\n           ^^^^^^^^^^^^^^^^^^^^^^^\nTimeoutError: timed out\n----------------------------------------\n"
            }
        },
        {
            "nodeid": "tests/acceptance/test_member_list.py::ListOrganizationMembersTest::test_list",
            "lineno": 24,
            "outcome": "passed",
            "keywords": [
                "test_list",
                "ListOrganizationMembersTest",
                "usefixtures",
                "test_member_list.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.4702113849999705,
                "outcome": "passed"
            },
            "call": {
                "duration": 3.886656509999966,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0948743620000414,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_alert_rule_details.py::OrganizationAlertRuleDetailsTest::test_alert_rule_with_issues",
            "lineno": 22,
            "outcome": "passed",
            "keywords": [
                "test_alert_rule_with_issues",
                "OrganizationAlertRuleDetailsTest",
                "usefixtures",
                "snuba",
                "test_organization_alert_rule_details.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5910866579999947,
                "outcome": "passed"
            },
            "call": {
                "duration": 3.7998435609999888,
                "outcome": "passed",
                "stderr": "%3|1712604791.243|FAIL|rdkafka#producer-1| [thrd:127.0.0.1:9092/bootstrap]: 127.0.0.1:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT, 30 identical error(s) suppressed)\n"
            },
            "teardown": {
                "duration": 0.09087529400005678,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_add_and_move_new_widget_on_existing_dashboard",
            "lineno": 69,
            "outcome": "passed",
            "keywords": [
                "test_add_and_move_new_widget_on_existing_dashboard",
                "OrganizationDashboardsAcceptanceTest",
                "usefixtures",
                "test_organization_dashboards.py",
                "sentry_metrics",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.4937970009999617,
                "outcome": "passed"
            },
            "call": {
                "duration": 9.570984057000032,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.09232480100001794,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_changing_number_widget_to_area_updates_widget_height",
            "lineno": 535,
            "outcome": "passed",
            "keywords": [
                "test_changing_number_widget_to_area_updates_widget_height",
                "OrganizationDashboardsAcceptanceTest",
                "usefixtures",
                "test_organization_dashboards.py",
                "sentry_metrics",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5201042440000947,
                "outcome": "passed"
            },
            "call": {
                "duration": 7.797778809999954,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.09366162100002384,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_delete_widget_in_view_mode",
            "lineno": 393,
            "outcome": "passed",
            "keywords": [
                "test_delete_widget_in_view_mode",
                "OrganizationDashboardsAcceptanceTest",
                "usefixtures",
                "test_organization_dashboards.py",
                "sentry_metrics",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5258784910000713,
                "outcome": "passed"
            },
            "call": {
                "duration": 4.922273758000074,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.09251830300001984,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsAcceptanceTest::test_position_when_adding_multiple_widgets_through_add_widget_tile_in_edit",
            "lineno": 437,
            "outcome": "passed",
            "keywords": [
                "test_position_when_adding_multiple_widgets_through_add_widget_tile_in_edit",
                "OrganizationDashboardsAcceptanceTest",
                "usefixtures",
                "test_organization_dashboards.py",
                "sentry_metrics",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5395979700000453,
                "outcome": "passed"
            },
            "call": {
                "duration": 14.19592898999997,
                "outcome": "passed",
                "stdout": "19:33:55 [ERROR] django.request: Internal Server Error: /api/0/organizations/baz/events/ (status_code=500 request=<WSGIRequest: GET '/api/0/organizations/baz/events/?field=count%28%29&name=&onDemandType=dynamic_query&per_page=20&query=&referrer=api.dashboards.tablewidget&sort=-count%28%29&statsPeriod=24h&useOnDemandMetrics=false&yAxis=count%28%29'>)\n19:33:56 [ERROR] django.request: Internal Server Error: /api/0/internal/rpc/user/get_many/ (status_code=500 request=<WSGIRequest: POST '/api/0/internal/rpc/user/get_many/'>)\n19:33:56 [ERROR] django.request: Internal Server Error: /api/0/organizations/baz/events/ (status_code=500 request=<WSGIRequest: GET '/api/0/organizations/baz/events/?field=count%28%29&name=&onDemandType=dynamic_query&per_page=20&query=&referrer=api.dashboards.tablewidget&sort=-count%28%29&statsPeriod=24h&useOnDemandMetrics=false&yAxis=count%28%29'>)\n19:33:56 [WARNING] django.request: Unauthorized: /api/0/organizations/baz/events/ (status_code=401 request=<WSGIRequest: GET '/api/0/organizations/baz/events/?field=count%28%29&name=&onDemandType=dynamic_query&per_page=20&query=&referrer=api.dashboards.tablewidget&sort=-count%28%29&statsPeriod=24h&useOnDemandMetrics=false&yAxis=count%28%29'>)\n19:33:56 [ERROR] django.request: Internal Server Error: /auth/login/baz/ (status_code=500 request=<WSGIRequest: GET '/auth/login/baz/'>)\n",
                "stderr": "Traceback (most recent call last):\n  File \"/home/runner/work/sentry/sentry/src/sentry/api/base.py\", line 306, in handle_exception\n    response = super().handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/rest_framework/views.py\", line 469, in handle_exception\n    self.raise_uncaught_exception(exc)\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/rest_framework/views.py\", line 480, in raise_uncaught_exception\n    raise exc\n  File \"/home/runner/work/sentry/sentry/src/sentry/api/base.py\", line 422, in dispatch\n    (args, kwargs) = self.convert_args(request, *args, **kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/api/bases/organization.py\", line 558, in convert_args\n    self.check_object_permissions(request, organization)\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/rest_framework/views.py\", line 345, in check_object_permissions\n    if not permission.has_object_permission(request, self, obj):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/api/bases/organization.py\", line 86, in has_object_permission\n    self.determine_access(request, organization)\n  File \"/home/runner/work/sentry/sentry/src/sentry/api/permissions.py\", line 212, in determine_access\n    assert False, \"Failed to fetch organization in determine_access\"\nAssertionError: Failed to fetch organization in determine_access\nTraceback (most recent call last):\n  File \"/home/runner/work/sentry/sentry/src/sentry/db/postgres/decorators.py\", line 91, in inner\n    return func(self, sql, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/db/postgres/base.py\", line 84, in execute\n    return self.cursor.execute(sql, clean_bad_params(params))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.DeadlockDetected: deadlock detected\nLINE 4:                         JOIN sentry_userrole_users\n                                     ^\nDETAIL:  Process 1150 waits for AccessShareLock on relation 20144 of database 19517; blocked by process 917.\nProcess 917 waits for AccessExclusiveLock on relation 20134 of database 19517; blocked by process 1150.\nHINT:  See server log for query details.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/db/postgres/decorators.py\", line 77, in inner\n    raise_the_exception(self.db, e)\n  File \"/home/runner/work/sentry/sentry/src/sentry/db/postgres/decorators.py\", line 75, in inner\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/db/postgres/decorators.py\", line 18, in inner\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/db/postgres/decorators.py\", line 93, in inner\n    raise type(e)(f\"{e!r}\\nSQL: {sql}\").with_traceback(e.__traceback__)\n  File \"/home/runner/work/sentry/sentry/src/sentry/db/postgres/decorators.py\", line 91, in inner\n    return func(self, sql, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/db/postgres/base.py\", line 84, in execute\n    return self.cursor.execute(sql, clean_bad_params(params))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.DeadlockDetected: DeadlockDetected('deadlock detected\\nLINE 4:                         JOIN sentry_userrole_users\\n                                     ^\\nDETAIL:  Process 1150 waits for AccessShareLock on relation 20144 of database 19517; blocked by process 917.\\nProcess 917 waits for AccessExclusiveLock on relation 20134 of database 19517; blocked by process 1150.\\nHINT:  See server log for query details.\\n')\nSQL: SELECT (select array_agg(permission) from sentry_userpermission where user_id=auth_user.id) AS \"permissions\", (\n                        SELECT array_agg(permissions)\n                        FROM sentry_userrole\n                        JOIN sentry_userrole_users\n                          ON sentry_userrole_users.role_id=sentry_userrole.id\n                       WHERE user_id=auth_user.id) AS \"roles\", (select array_agg(row_to_json(sentry_useremail)) from sentry_useremail where user_id=auth_user.id) AS \"useremails\", (SELECT array_agg(row_to_json(auth_authenticator)) FROM auth_authenticator WHERE user_id=auth_user.id) AS \"authenticators\", (SELECT array_agg(row_to_json(sentry_useravatar)) FROM sentry_useravatar WHERE user_id = auth_user.id) AS \"useravatar\", \"auth_user\".\"password\", \"auth_user\".\"last_login\", \"auth_user\".\"id\", \"auth_user\".\"username\", \"auth_user\".\"first_name\", \"auth_user\".\"email\", \"auth_user\".\"is_staff\", \"auth_user\".\"is_active\", \"auth_user\".\"is_unclaimed\", \"auth_user\".\"is_superuser\", \"auth_user\".\"is_managed\", \"auth_user\".\"is_sentry_app\", \"auth_user\".\"is_password_expired\", \"auth_user\".\"last_password_change\", \"auth_user\".\"flags\", \"auth_user\".\"session_nonce\", \"auth_user\".\"date_joined\", \"auth_user\".\"last_active\", \"auth_user\".\"avatar_type\", \"auth_user\".\"avatar_url\" FROM \"auth_user\" WHERE \"auth_user\".\"id\" IN (%s)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/sentry/sentry/src/sentry/api/endpoints/internal/rpc.py\", line 64, in post\n    result = dispatch_to_local_service(service_name, method_name, arguments)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/services/hybrid_cloud/rpc.py\", line 386, in dispatch_to_local_service\n    result = method(**raw_arguments.__dict__)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/services/hybrid_cloud/user/impl.py\", line 60, in get_many\n    return self._FQ.get_many(filter)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/services/hybrid_cloud/filter_query.py\", line 132, in get_many\n    return [self.serialize_rpc(o) for o in self._query_many(filter=filter)]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/django/db/models/query.py\", line 400, in __iter__\n    self._fetch_all()\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/django/db/models/query.py\", line 1928, in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/django/db/models/query.py\", line 91, in __iter__\n    results = compiler.execute_sql(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/django/db/models/sql/compiler.py\", line 1562, in execute_sql\n    cursor.execute(sql, params)\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/sentry_sdk/utils.py\", line 1702, in runner\n    return original_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/db/postgres/decorators.py\", line 77, in inner\n    raise_the_exception(self.db, e)\n  File \"/home/runner/work/sentry/sentry/src/sentry/db/postgres/decorators.py\", line 75, in inner\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/db/postgres/decorators.py\", line 18, in inner\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/db/postgres/decorators.py\", line 93, in inner\n    raise type(e)(f\"{e!r}\\nSQL: {sql}\").with_traceback(e.__traceback__)\n  File \"/home/runner/work/sentry/sentry/src/sentry/db/postgres/decorators.py\", line 91, in inner\n    return func(self, sql, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/db/postgres/base.py\", line 84, in execute\n    return self.cursor.execute(sql, clean_bad_params(params))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.OperationalError: DeadlockDetected('deadlock detected\\nLINE 4:                         JOIN sentry_userrole_users\\n                                     ^\\nDETAIL:  Process 1150 waits for AccessShareLock on relation 20144 of database 19517; blocked by process 917.\\nProcess 917 waits for AccessExclusiveLock on relation 20134 of database 19517; blocked by process 1150.\\nHINT:  See server log for query details.\\n')\nSQL: SELECT (select array_agg(permission) from sentry_userpermission where user_id=auth_user.id) AS \"permissions\", (\n                        SELECT array_agg(permissions)\n                        FROM sentry_userrole\n                        JOIN sentry_userrole_users\n                          ON sentry_userrole_users.role_id=sentry_userrole.id\n                       WHERE user_id=auth_user.id) AS \"roles\", (select array_agg(row_to_json(sentry_useremail)) from sentry_useremail where user_id=auth_user.id) AS \"useremails\", (SELECT array_agg(row_to_json(auth_authenticator)) FROM auth_authenticator WHERE user_id=auth_user.id) AS \"authenticators\", (SELECT array_agg(row_to_json(sentry_useravatar)) FROM sentry_useravatar WHERE user_id = auth_user.id) AS \"useravatar\", \"auth_user\".\"password\", \"auth_user\".\"last_login\", \"auth_user\".\"id\", \"auth_user\".\"username\", \"auth_user\".\"first_name\", \"auth_user\".\"email\", \"auth_user\".\"is_staff\", \"auth_user\".\"is_active\", \"auth_user\".\"is_unclaimed\", \"auth_user\".\"is_superuser\", \"auth_user\".\"is_managed\", \"auth_user\".\"is_sentry_app\", \"auth_user\".\"is_password_expired\", \"auth_user\".\"last_password_change\", \"auth_user\".\"flags\", \"auth_user\".\"session_nonce\", \"auth_user\".\"date_joined\", \"auth_user\".\"last_active\", \"auth_user\".\"avatar_type\", \"auth_user\".\"avatar_url\" FROM \"auth_user\" WHERE \"auth_user\".\"id\" IN (%s)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/sentry/sentry/src/sentry/api/base.py\", line 306, in handle_exception\n    response = super().handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/rest_framework/views.py\", line 469, in handle_exception\n    self.raise_uncaught_exception(exc)\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/rest_framework/views.py\", line 480, in raise_uncaught_exception\n    raise exc\n  File \"/home/runner/work/sentry/sentry/src/sentry/api/base.py\", line 439, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/api/endpoints/internal/rpc.py\", line 74, in post\n    raise Exception(\nException: Problem processing rpc service endpoint user/get_many\n"
            },
            "teardown": {
                "duration": 0.09392309600002591,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_dashboards.py::OrganizationDashboardsManageAcceptanceTest::test_dashboard_manager_with_unset_layouts_and_defined_layouts",
            "lineno": 714,
            "outcome": "passed",
            "keywords": [
                "test_dashboard_manager_with_unset_layouts_and_defined_layouts",
                "OrganizationDashboardsManageAcceptanceTest",
                "usefixtures",
                "test_organization_dashboards.py",
                "sentry_metrics",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.489858574999971,
                "outcome": "passed"
            },
            "call": {
                "duration": 3.90819132799993,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.09008249099997556,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_developer_settings.py::OrganizationDeveloperSettingsEditAcceptanceTest::test_remove_tokens_internal_app",
            "lineno": 102,
            "outcome": "passed",
            "keywords": [
                "test_remove_tokens_internal_app",
                "OrganizationDeveloperSettingsEditAcceptanceTest",
                "usefixtures",
                "test_organization_developer_settings.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5313199129999475,
                "outcome": "passed"
            },
            "call": {
                "duration": 4.87170160900007,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.09973381700001482,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_delete_saved_query",
            "lineno": 584,
            "outcome": "passed",
            "keywords": [
                "test_delete_saved_query",
                "OrganizationEventsV2Test",
                "usefixtures",
                "snuba",
                "test_organization_events_v2.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5537407980000353,
                "outcome": "passed",
                "stderr": "%3|1712604851.246|FAIL|rdkafka#producer-1| [thrd:127.0.0.1:9092/bootstrap]: 127.0.0.1:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT, 30 identical error(s) suppressed)\n"
            },
            "call": {
                "duration": 6.0275225389999605,
                "outcome": "passed",
                "stdout": "19:34:15 [WARNING] django.request: Not Found: /api/0/organizations/rowdy-tiger/discover/saved/1/ (status_code=404 request=<WSGIRequest: GET '/api/0/organizations/rowdy-tiger/discover/saved/1/'>)\n"
            },
            "teardown": {
                "duration": 0.0904666910000742,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_event_detail_view_from_all_events",
            "lineno": 304,
            "outcome": "passed",
            "keywords": [
                "test_event_detail_view_from_all_events",
                "__wrapped__",
                "patchings",
                "OrganizationEventsV2Test",
                "usefixtures",
                "snuba",
                "test_organization_events_v2.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5905150270000377,
                "outcome": "passed"
            },
            "call": {
                "duration": 6.020343691000107,
                "outcome": "passed",
                "stdout": "19:34:23 [WARNING] django.request: Not Found: /api/0/projects/rowdy-tiger/bengal/events/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/committers/ (status_code=404 request=<WSGIRequest: GET '/api/0/projects/rowdy-tiger/bengal/events/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/committers/'>)\n"
            },
            "teardown": {
                "duration": 0.09195455899998706,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_events_v2.py::OrganizationEventsV2Test::test_transaction_event_detail_view_ops_filtering",
            "lineno": 496,
            "outcome": "passed",
            "keywords": [
                "test_transaction_event_detail_view_ops_filtering",
                "__wrapped__",
                "patchings",
                "OrganizationEventsV2Test",
                "usefixtures",
                "snuba",
                "test_organization_events_v2.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5772110700000894,
                "outcome": "passed"
            },
            "call": {
                "duration": 6.424850167000045,
                "outcome": "passed",
                "stdout": "19:34:32 [WARNING] django.request: Not Found: /api/0/projects/rowdy-tiger/bengal/events/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/committers/ (status_code=404 request=<WSGIRequest: GET '/api/0/projects/rowdy-tiger/bengal/events/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/committers/'>)\n"
            },
            "teardown": {
                "duration": 0.0935508510000318,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_global_selection_header.py::OrganizationGlobalHeaderTest::test_global_selection_header_dropdown",
            "lineno": 69,
            "outcome": "passed",
            "keywords": [
                "test_global_selection_header_dropdown",
                "OrganizationGlobalHeaderTest",
                "usefixtures",
                "snuba",
                "test_organization_global_selection_header.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5669342269999333,
                "outcome": "passed"
            },
            "call": {
                "duration": 5.267949559000044,
                "outcome": "passed",
                "stderr": "%3|1712604881.246|FAIL|rdkafka#producer-1| [thrd:127.0.0.1:9092/bootstrap]: 127.0.0.1:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT, 30 identical error(s) suppressed)\n"
            },
            "teardown": {
                "duration": 0.08258645999990222,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_global_selection_header.py::OrganizationGlobalHeaderTest::test_issue_details_to_stream_with_initial_env_no_project",
            "lineno": 342,
            "outcome": "passed",
            "keywords": [
                "test_issue_details_to_stream_with_initial_env_no_project",
                "__wrapped__",
                "patchings",
                "OrganizationGlobalHeaderTest",
                "usefixtures",
                "snuba",
                "test_organization_global_selection_header.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5722952800000485,
                "outcome": "passed"
            },
            "call": {
                "duration": 5.774016126999982,
                "outcome": "passed",
                "stdout": "19:34:46 [WARNING] django.request: Not Found: /api/0/organizations/rowdy-tiger/replay-count/ (status_code=404 request=<WSGIRequest: GET '/api/0/organizations/rowdy-tiger/replay-count/?data_source=discover&project=-1&query=issue.id%3A%5B14%5D&statsPeriod=90d'>)\n"
            },
            "teardown": {
                "duration": 0.09898807499996565,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_group_index.py::OrganizationGroupIndexTest::test_archive_issues_multi_projects",
            "lineno": 137,
            "outcome": "passed",
            "keywords": [
                "test_archive_issues_multi_projects",
                "__wrapped__",
                "patchings",
                "OrganizationGroupIndexTest",
                "usefixtures",
                "snuba",
                "test_organization_group_index.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5530584399999725,
                "outcome": "passed"
            },
            "call": {
                "duration": 5.127874056999985,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.08344937599997593,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_group_index.py::OrganizationGroupIndexTest::test_resolve_issues_removal",
            "lineno": 77,
            "outcome": "passed",
            "keywords": [
                "test_resolve_issues_removal",
                "__wrapped__",
                "patchings",
                "OrganizationGroupIndexTest",
                "usefixtures",
                "snuba",
                "test_organization_group_index.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5893758009999601,
                "outcome": "passed"
            },
            "call": {
                "duration": 5.299461035000036,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.08424126700003853,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_integration_configuration_tabs.py::OrganizationIntegrationConfigurationTabs::test_external_team_mappings",
            "lineno": 85,
            "outcome": "passed",
            "keywords": [
                "test_external_team_mappings",
                "OrganizationIntegrationConfigurationTabs",
                "usefixtures",
                "test_organization_integration_configuration_tabs.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5238531530000046,
                "outcome": "passed"
            },
            "call": {
                "duration": 5.369190108999987,
                "outcome": "passed",
                "stdout": "19:35:07 [ERROR] django.request: Internal Server Error: /api/0/organizations/baz/integrations/1/repos/ (status_code=500 request=<WSGIRequest: GET '/api/0/organizations/baz/integrations/1/repos/'>)\n",
                "stderr": "Traceback (most recent call last):\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/jwt/algorithms.py\", line 257, in prepare_key\n    key = load_pem_private_key(key, password=None)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/cryptography/hazmat/backends/openssl/backend.py\", line 494, in _handle_key_loading_error\n    raise ValueError(\nValueError: ('Could not deserialize key data. The data may be in an incorrect format, it may be encrypted with an unsupported algorithm, or it may be an unsupported key type (e.g. EC curves with explicit parameters).', [<OpenSSLError(code=503841036, lib=60, reason=524556, reason_text=unsupported)>])\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/sentry/sentry/src/sentry/api/base.py\", line 306, in handle_exception\n    response = super().handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/rest_framework/views.py\", line 469, in handle_exception\n    self.raise_uncaught_exception(exc)\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/rest_framework/views.py\", line 480, in raise_uncaught_exception\n    raise exc\n  File \"/home/runner/work/sentry/sentry/src/sentry/api/base.py\", line 439, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/api/endpoints/organization_integration_repos.py\", line 62, in get\n    repositories = install.get_repositories(request.GET.get(\"search\"))\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/integrations/github/integration.py\", line 212, in get_repositories\n    for i in self.get_client().get_repositories(fetch_max_pages)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/integrations/github/client.py\", line 488, in get_repositories\n    repos = self.get_with_pagination(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/integrations/github/client.py\", line 534, in get_with_pagination\n    resp = self.get(path, params={\"per_page\": self.page_size})\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/shared_integrations/client/base.py\", line 349, in get\n    return self.request(\"GET\", *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/shared_integrations/client/base.py\", line 315, in request\n    return self._request(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/shared_integrations/client/base.py\", line 233, in _request\n    finalized_request = self.finalize_request(_prepared_request)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/shared_integrations/client/proxy.py\", line 195, in finalize_request\n    prepared_request = self.authorize_request(prepared_request=prepared_request)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/silo/base.py\", line 146, in override\n    return original_method(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/integrations/github/client.py\", line 164, in authorize_request\n    token = self._get_token(prepared_request=prepared_request)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/silo/base.py\", line 146, in override\n    return original_method(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/integrations/github/client.py\", line 143, in _get_token\n    access_token = self._refresh_access_token()\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/silo/base.py\", line 146, in override\n    return original_method(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/integrations/github/client.py\", line 91, in _refresh_access_token\n    data = self.post(f\"/app/installations/{self._get_installation_id()}/access_tokens\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/shared_integrations/client/base.py\", line 355, in post\n    return self.request(\"POST\", *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/shared_integrations/client/base.py\", line 315, in request\n    return self._request(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/shared_integrations/client/base.py\", line 233, in _request\n    finalized_request = self.finalize_request(_prepared_request)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/shared_integrations/client/proxy.py\", line 195, in finalize_request\n    prepared_request = self.authorize_request(prepared_request=prepared_request)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/silo/base.py\", line 146, in override\n    return original_method(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/integrations/github/client.py\", line 164, in authorize_request\n    token = self._get_token(prepared_request=prepared_request)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/silo/base.py\", line 146, in override\n    return original_method(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/integrations/github/client.py\", line 129, in _get_token\n    jwt = self._get_jwt()\n          ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/integrations/github/client.py\", line 76, in _get_jwt\n    return get_jwt()\n           ^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/integrations/github/utils.py\", line 32, in get_jwt\n    return jwt.encode(payload, github_private_key, algorithm=\"RS256\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/src/sentry/utils/jwt.py\", line 109, in encode\n    return pyjwt.encode(payload, key, algorithm=algorithm, headers=headers)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/jwt/api_jwt.py\", line 64, in encode\n    return api_jws.encode(json_payload, key, algorithm, headers, json_encoder)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/jwt/api_jws.py\", line 133, in encode\n    key = alg_obj.prepare_key(key)\n          ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/sentry/sentry/.venv/lib/python3.11/site-packages/jwt/algorithms.py\", line 259, in prepare_key\n    key = load_pem_public_key(key)\n          ^^^^^^^^^^^^^^^^^^^^^^^^\nValueError: Unable to load PEM file. See https://cryptography.io/en/latest/faq/#why-can-t-i-import-my-pem-file for more details. MalformedFraming\n"
            },
            "teardown": {
                "duration": 0.09109578300001431,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_plugin_detail_view.py::OrganizationPluginDetailedView::test_opsgenie_add_to_project",
            "lineno": 30,
            "outcome": "passed",
            "keywords": [
                "test_opsgenie_add_to_project",
                "OrganizationPluginDetailedView",
                "usefixtures",
                "test_organization_plugin_detail_view.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5063259849999895,
                "outcome": "passed"
            },
            "call": {
                "duration": 5.034104383999988,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.09150419599995985,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_releases.py::OrganizationReleasesTest::test_detail_pick_project",
            "lineno": 51,
            "outcome": "passed",
            "keywords": [
                "test_detail_pick_project",
                "__wrapped__",
                "patchings",
                "OrganizationReleasesTest",
                "usefixtures",
                "test_organization_releases.py",
                "sentry_metrics",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.4703145710000172,
                "outcome": "passed"
            },
            "call": {
                "duration": 3.994679142999985,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.09236254400002508,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_security_privacy.py::OrganizationSecurityAndPrivacyTest::test_renders_advanced_data_scrubbing_add_rule_modal",
            "lineno": 75,
            "outcome": "passed",
            "keywords": [
                "test_renders_advanced_data_scrubbing_add_rule_modal",
                "OrganizationSecurityAndPrivacyTest",
                "usefixtures",
                "test_organization_security_privacy.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.512285608999946,
                "outcome": "passed"
            },
            "call": {
                "duration": 3.227477379999982,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.08723875400005454,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_organization_sentry_app_detailed_view.py::OrganizationSentryAppDetailedView::test_uninstallation",
            "lineno": 37,
            "outcome": "passed",
            "keywords": [
                "test_uninstallation",
                "OrganizationSentryAppDetailedView",
                "usefixtures",
                "test_organization_sentry_app_detailed_view.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5143082099999674,
                "outcome": "passed"
            },
            "call": {
                "duration": 5.091779380000048,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.09517968299996937,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_performance_issues.py::PerformanceIssuesTest::test_multiple_events_with_multiple_causes_are_not_grouped",
            "lineno": 124,
            "outcome": "passed",
            "keywords": [
                "test_multiple_events_with_multiple_causes_are_not_grouped",
                "__wrapped__",
                "patchings",
                "PerformanceIssuesTest",
                "usefixtures",
                "snuba",
                "test_performance_issues.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.6095122049999873,
                "outcome": "passed"
            },
            "call": {
                "duration": 3.03763213600007,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.08410183900002721,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_performance_landing.py::PerformanceLandingTest::test_with_data_and_new_widget_designs",
            "lineno": 50,
            "outcome": "passed",
            "keywords": [
                "test_with_data_and_new_widget_designs",
                "__wrapped__",
                "patchings",
                "PerformanceLandingTest",
                "usefixtures",
                "snuba",
                "test_performance_landing.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5774914560000752,
                "outcome": "passed"
            },
            "call": {
                "duration": 4.892131150000068,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.09256100300001435,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_performance_summary.py::PerformanceSummaryTest::test_transaction_vitals",
            "lineno": 103,
            "outcome": "passed",
            "keywords": [
                "test_transaction_vitals",
                "__wrapped__",
                "patchings",
                "PerformanceSummaryTest",
                "usefixtures",
                "snuba",
                "test_performance_summary.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.565878237999982,
                "outcome": "passed"
            },
            "call": {
                "duration": 4.438175487999956,
                "outcome": "passed",
                "stdout": "19:35:51 [WARNING] django.request: Not Found: /api/0/organizations/rowdy-tiger/project-transaction-threshold-override/ (status_code=404 request=<WSGIRequest: GET '/api/0/organizations/rowdy-tiger/project-transaction-threshold-override/?project=4553800632631298&transaction=%2Fcountry_by_code%2F'>)\n19:35:52 [WARNING] django.request: Not Found: /api/0/organizations/rowdy-tiger/replay-count/ (status_code=404 request=<WSGIRequest: GET '/api/0/organizations/rowdy-tiger/replay-count/?data_source=discover&project=-1&query=transaction%3A%5B%2Fcountry_by_code%2F%5D&statsPeriod=90d'>)\n"
            },
            "teardown": {
                "duration": 0.0912475860000086,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_performance_trends.py::PerformanceTrendsTest::test_with_data",
            "lineno": 58,
            "outcome": "passed",
            "keywords": [
                "test_with_data",
                "__wrapped__",
                "patchings",
                "PerformanceTrendsTest",
                "usefixtures",
                "snuba",
                "test_performance_trends.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5257865830000128,
                "outcome": "passed"
            },
            "call": {
                "duration": 6.469564294999941,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.12951859899999363,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_project_general_settings.py::ProjectGeneralSettingsTest::test_mobile_menu",
            "lineno": 21,
            "outcome": "passed",
            "keywords": [
                "test_mobile_menu",
                "ProjectGeneralSettingsTest",
                "usefixtures",
                "test_project_general_settings.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.470242632999998,
                "outcome": "passed"
            },
            "call": {
                "duration": 4.232132535999995,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.09188664499993138,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_project_ownership.py::ProjectOwnershipTest::test_simple",
            "lineno": 11,
            "outcome": "passed",
            "keywords": [
                "test_simple",
                "ProjectOwnershipTest",
                "usefixtures",
                "test_project_ownership.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5114381450000565,
                "outcome": "passed"
            },
            "call": {
                "duration": 3.7436252460000787,
                "outcome": "passed",
                "stderr": "%3|1712604971.250|FAIL|rdkafka#producer-1| [thrd:127.0.0.1:9092/bootstrap]: 127.0.0.1:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT, 30 identical error(s) suppressed)\n"
            },
            "teardown": {
                "duration": 0.09011787099996127,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_project_user_feedback.py::ProjectUserFeedbackTest::test_empty",
            "lineno": 30,
            "outcome": "passed",
            "keywords": [
                "test_empty",
                "ProjectUserFeedbackTest",
                "usefixtures",
                "test_project_user_feedback.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5458342960000664,
                "outcome": "passed"
            },
            "call": {
                "duration": 3.7722163739999814,
                "outcome": "passed",
                "stdout": "19:36:17 [WARNING] django.request: Bad Request: /api/0/organizations/rowdy-tiger/user-feedback/ (status_code=400 request=<WSGIRequest: GET '/api/0/organizations/rowdy-tiger/user-feedback/?project=%244553800634335234&status=unresolved'>)\n"
            },
            "teardown": {
                "duration": 0.0901853889999984,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_replay_detail.py::ReplayDetailTest::test_network_tab",
            "lineno": 91,
            "outcome": "passed",
            "keywords": [
                "test_network_tab",
                "ReplayDetailTest",
                "usefixtures",
                "snuba",
                "test_replay_detail.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.5851047869999775,
                "outcome": "passed"
            },
            "call": {
                "duration": 4.184674159999986,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.09158223600002202,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "tests/acceptance/test_shared_issue.py::SharedIssueTest::test_python_event",
            "lineno": 17,
            "outcome": "passed",
            "keywords": [
                "test_python_event",
                "SharedIssueTest",
                "usefixtures",
                "test_shared_issue.py",
                "acceptance",
                "tests",
                "sentry",
                ""
            ],
            "setup": {
                "duration": 1.521058137999944,
                "outcome": "passed"
            },
            "call": {
                "duration": 4.361008804999983,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 1.904138912999997,
                "outcome": "passed"
            }
        }
    ]
}
